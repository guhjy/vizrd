% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PartialPlots.r
\name{plotPartialEffs}
\alias{plotPartialEffs}
\title{Partial effects plots for any model type, based on the provided predict function (predFnx).  Partial
effects are calculated by specifying the 'type' argument to be either using either (1) type='median': the median 
of numeric covariates and most common level of factor covariates; or (2) type='all': the approach in 
randomForest::partialPlot where the supplied dataset is used to calculate a mean prediction for any given 
variable value. Note if using type='all', the method will run slow for large datasets and large
ensembles of trees, but will give a more accurate representation, particularly for tree-based methods and/or
lots of dummy variables.}
\usage{
plotPartialEffs(mod, dat, predFnx, colNms, type = "all", dWeights = rep(1,
  dim(dat)[1]), CIOn = FALSE, totPerPage = 12, pdfFile = NULL)
}
\arguments{
\item{mod}{model object}

\item{dat}{the dataset (or sample dataset) to get median values (type='median') or make predictions directly on (type='all')}

\item{predFnx}{a prediction function with arguments 'function(mod, newdata)' - must return numeric values. 
If CIOn=TRUE, column names for returned data.frame should be [colNm]_lower and [colNm]_upper, e.g.,
c('pred', 'pred_low', 'pred_high').}

\item{colNms}{names of the predictors to get the values from}

\item{type}{prediction dataset for each variable value: median=use median/most common value for covariates; 
all=use full datasaet for covariates}

\item{CIOn}{whether or not to plot confidence bounds, if so assumes that predFnx passes this in}

\item{totPerPage}{Total number of figures per page (default=9)}

\item{pdfFile}{The file path/name to save to.}

\item{colNms}{names of the predictors to get the values from}
}
\description{
Note: in randomForest::partialPlot, they scale classificiation probabilities to the log scale, and set any prob of 0 
equal to .Machine$double.eps prior to logging.  Subjective choice of what to assign to a prob of 0 will effect 
the shape of the resulting partial effect plot, so results form randomForest::partialPlot should be interpreted 
cautiously for datasets where classification probabilities contain a substantial number of estimated 0 values.  The
approach used here is to plot whatever is passed through the predFnx, so if pass probabilities, it'll show the 
partial effect on the probability scale directly.
}
\details{
Here the key is to pass an approriate user-defined predFnx, where the function must return
a data frame: a single column for single-value response (e.g., regression), a single
column for binary classification, or multiple columns for multiclass classification.  If only
certain classes are desired from multiclass classification, just have the predFnx return columns
for those predicted probabilities.
}

